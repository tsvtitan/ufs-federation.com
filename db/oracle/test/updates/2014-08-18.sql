ALTER TABLE MOBILE_MENUS
ADD KEYWORDS_SQL NCLOB;


CREATE OR REPLACE VIEW V_MOBILE_MENUS
AS
 SELECT M1.*, 
        M2.NAME AS PARENT_NAME,
        LEVEL AS "LEVEL", 
        L.NAME AS LANG_NAME,
        CAST((CURRENT_TIMESTAMP+INTERVAL '1' MONTH) AS TIMESTAMP) AS EXPIRED
   FROM MOBILE_MENUS M1
   LEFT JOIN MOBILE_MENUS M2 ON M2.MOBILE_MENU_ID=M1.PARENT_ID
   LEFT JOIN LANGS L ON L.LANG_ID=M1.LANG_ID
  START WITH M1.PARENT_ID IS NULL
CONNECT BY M1.PARENT_ID = PRIOR M1.MOBILE_MENU_ID;


ALTER TABLE MESSAGES
ADD HEADERS NCLOB;

CREATE OR REPLACE VIEW V_MESSAGES
AS
SELECT M.*,
        A1.LOGIN AS CREATOR_LOGIN, 
        A2.LOGIN AS SENDER_LOGIN,
        A2.EMAIL AS SENDER_EMAIL,
        A2.PHONE AS SENDER_PHONE,
        A3.LOGIN AS RECIPIENT_LOGIN,
        A3.EMAIL AS RECIPIENT_EMAIL,
        A3.PHONE AS RECIPIENT_PHONE,
        CH.NAME AS CHANNEL_NAME,
        CH.CLASS_NAME AS CHANNEL_CLASS,
        PT.NAME AS PATTERN_NAME,
        PT.PATTERN_TYPE AS PATTERN_TYPE
  FROM MESSAGES M

  LEFT JOIN ACCOUNTS A1 ON A1.ACCOUNT_ID=M.CREATOR_ID
  LEFT JOIN ACCOUNTS A2 ON A2.ACCOUNT_ID=M.SENDER_ID
  LEFT JOIN ACCOUNTS A3 ON A3.ACCOUNT_ID=M.RECIPIENT_ID
  LEFT JOIN CHANNELS CH ON CH.CHANNEL_ID=M.CHANNEL_ID 
  LEFT JOIN PATTERNS PT ON PT.PATTERN_ID=M.PATTERN_ID;
  
CREATE OR REPLACE VIEW V_MESSAGES_STATUSES
AS
SELECT T1.PARENT_ID, 
       T1.ALL_COUNT,
       DECODE(T2.SENT_COUNT,NULL,0,T2.SENT_COUNT) AS SENT_COUNT,
       DECODE(T3.DELIVERED_COUNT,NULL,0,T3.DELIVERED_COUNT) AS DELIVERED_COUNT
  FROM (SELECT PARENT_ID, COUNT(*) AS ALL_COUNT
          FROM MESSAGES
         GROUP BY PARENT_ID) T1
  LEFT JOIN (SELECT PARENT_ID, COUNT(*) AS SENT_COUNT
               FROM MESSAGES
              WHERE SENT IS NOT NULL 
              GROUP BY PARENT_ID) T2 ON T2.PARENT_ID=T1.PARENT_ID
  LEFT JOIN (SELECT PARENT_ID, COUNT(*) AS DELIVERED_COUNT
               FROM MESSAGES
              WHERE DELIVERED IS NOT NULL 
              GROUP BY PARENT_ID) T3 ON T3.PARENT_ID=T1.PARENT_ID;
              
            