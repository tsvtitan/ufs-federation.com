create or replace PROCEDURE UPLOAD_ACCOUNT_FILE 
(
  FILE_LOCATION IN NVARCHAR2
, FILE_NAME IN NVARCHAR2
, FILE_EXTENSION IN NVARCHAR2
, FILE_DATA IN BLOB
, FILE_DATA_SIZE IN INT
, FILE_CREATED IN NVARCHAR2
, STATUS_CODE OUT SMALLINT
, STATUS_TEXT OUT NVARCHAR2
) AS

  CUR_CLIENT_ID NUMBER;
  CUR_ACCOUNT_ID NVARCHAR2(32);
  FILE_COUNT SMALLINT;
  CLIENT_NAME NVARCHAR2(255);
  POS SMALLINT;
  PAGE_ID NVARCHAR2(32);
  PATH_COUNT SMALLINT;
  REPORT_ROOT NVARCHAR2(32);
  FILE_PATH NVARCHAR2(500);
  
  CLIENT_NOT_EXIST EXCEPTION;
  PATH_NOT_EXIST EXCEPTION;
  
BEGIN
  
  STATUS_CODE := 0;
  STATUS_TEXT := null;
  FILE_PATH := FILE_LOCATION;
  
  /* 1. Поиск ИД клиента в базах Fansy */
  /* Как определить к какой базе обращаться?? Решено пока обращаться к SPECTRE_UFS, т.к. в т. CLIENTS есть поле SPECTRE_UFS_ID */
  
  /* Определяем имя клиента по переданному пути */
  
  POS := INSTR(SUBSTR(FILE_LOCATION, 2, LENGTH(FILE_LOCATION) - 1), '\');
  
  IF POS = 0 THEN
    POS := LENGTH(FILE_LOCATION);
  END IF;
  
  CLIENT_NAME := SUBSTR(FILE_LOCATION, 2, POS - 1);
  
  FOR INC IN (
    SELECT c.CLIENT_ID, f.ID
    FROM OD_FACES@SPECTRE_UFS f left join CLIENTS c ON f.ID = c.SPECTRE_UFS_ID
    WHERE f.NAME = CLIENT_NAME
  ) LOOP
    CUR_ACCOUNT_ID := INC.CLIENT_ID;
    CUR_CLIENT_ID := INC.ID;
    EXIT;
  END LOOP;
  
  IF CUR_ACCOUNT_ID IS NULL THEN
    RAISE CLIENT_NOT_EXIST;
  END IF;
  
  /* 2. Определяем наличие соответствующего пути в PATH для файла*/
  
  REPORT_ROOT := '8BA433940C03691965AEEEEE4363C90B';
  PATH_COUNT := 0;
  FILE_PATH := SUBSTR(FILE_LOCATION, POS + 1, LENGTH(FILE_LOCATION) - POS);
  
  FOR INC IN (
    SELECT p.PAGE_ID, COUNT(*) CNT
    FROM (
      SELECT P1.PATH_ID,
             CAST(REPLACE(SYS_CONNECT_BY_PATH(DECODE(P1.DESCRIPTION,NULL,'',P1.DESCRIPTION),'\'),'\\','\') AS NVARCHAR2(1000)) AS PATH_DESC,
             CAST(REPLACE(SYS_CONNECT_BY_PATH(DECODE(P1.NAME,NULL,'',P1.NAME),'/'),'//','/') AS NVARCHAR2(1000)) AS PATH_NAME
      FROM PATHS P1 LEFT JOIN PATHS P2 ON P2.PATH_ID=P1.PARENT_ID
      START WITH P1.PARENT_ID = REPORT_ROOT /*"report"*/
      CONNECT BY P1.PARENT_ID = PRIOR P1.PATH_ID
    ) q INNER JOIN PAGES p ON q.PATH_ID = p.PAGE_ID
    WHERE q.PATH_DESC = FILE_PATH
    GROUP BY PAGE_ID
  ) LOOP
    PAGE_ID := INC.PAGE_ID;
    PATH_COUNT := INC.CNT;
    EXIT;
  END LOOP;
  
  IF PATH_COUNT = 0 THEN
    RAISE PATH_NOT_EXIST;
  END IF;
    
  /* 3. Сохранение данных */
    
  /* Проверка на наличие данного файла по 4 параметрам: ИД аккаунта, расположение, имя и расширение файла */
  
  SELECT COUNT(*)
  INTO FILE_COUNT
  FROM ACCOUNT_FILES
  WHERE ACCOUNT_ID = CUR_ACCOUNT_ID AND LOCATION = FILE_PATH AND NAME = FILE_NAME AND EXTENSION = FILE_EXTENSION;
  
  IF FILE_COUNT > 0 THEN
    
    /* Обновляем существующие данные */
    UPDATE ACCOUNT_FILES SET 
      DATA = FILE_DATA,
      FILE_DATA_SIZE = UPLOAD_ACCOUNT_FILE.FILE_DATA_SIZE,
      DOC_CREATED = CAST(FILE_CREATED as TIMESTAMP),
      FILE_DOWNLOADED = null,
      MODIFIED = CURRENT_TIMESTAMP
    WHERE ACCOUNT_ID = CUR_ACCOUNT_ID AND LOCATION = FILE_PATH AND NAME = FILE_NAME AND EXTENSION = FILE_EXTENSION;
    
    STATUS_TEXT := 'Файл обновлен в Личном кабинете';
    
  ELSE
    
    /* Добавляем новый файл */
    INSERT INTO ACCOUNT_FILES ( ACCOUNT_FILE_ID, ACCOUNT_ID, LOCATION, NAME, EXTENSION, DATA, PAGE_ID, 
      DOC_CREATED, FILE_DATA_SIZE, CREATED )
    VALUES ( GET_UNIQUE_ID(), CUR_ACCOUNT_ID, FILE_PATH, FILE_NAME, FILE_EXTENSION, FILE_DATA, PAGE_ID,  
      CAST(FILE_CREATED as TIMESTAMP), UPLOAD_ACCOUNT_FILE.FILE_DATA_SIZE, CURRENT_TIMESTAMP );
    
    STATUS_TEXT := 'Файл передан в Личный кабинет';
    
  END IF;
  
  COMMIT;

EXCEPTION
  WHEN NO_DATA_FOUND THEN
    STATUS_CODE := 1;
    STATUS_TEXT := 'Клиент ' || '''' || CLIENT_NAME || '''' || ' не найден в учетной системе';
  WHEN CLIENT_NOT_EXIST THEN
    STATUS_CODE := 2;
    STATUS_TEXT := 'Учетная запись клиента ' || '''' || CLIENT_NAME || '''' || ' не найдена в Личном кабинете';
  WHEN PATH_NOT_EXIST THEN
    STATUS_CODE := 3;
    STATUS_TEXT := 'Отсутствует путь ';
    IF FILE_PATH != '' THEN
      STATUS_TEXT := STATUS_TEXT || '''' || FILE_PATH || ''' ';
    END IF;
    STATUS_TEXT := STATUS_TEXT || 'к файлу на сайте';
  /*WHEN OTHERS THEN
    STATUS := SQLERRM;
    RAISE;*/
END UPLOAD_ACCOUNT_FILE;