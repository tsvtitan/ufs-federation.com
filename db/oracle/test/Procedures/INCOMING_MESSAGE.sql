DROP PROCEDURE INCOMING_MESSAGE;

CREATE OR REPLACE PROCEDURE INCOMING_MESSAGE
(
  MESSAGE_ID OUT NVARCHAR2,
  PARENT_ID IN NVARCHAR2,
  CREATOR_ID IN NVARCHAR2,
  SENDER_ID IN NVARCHAR2,
  SENDER_NAME IN NVARCHAR2,
  SENDER_CONTACT IN NVARCHAR2,
  RECIPIENT_ID IN NVARCHAR2,
  RECIPIENT_NAME IN NVARCHAR2,
  RECIPIENT_CONTACT IN NVARCHAR2,
  SUBJECT IN NVARCHAR2,
  BODY IN NCLOB,
  SENT IN TIMESTAMP, 
  ERROR IN NCLOB,
  "BEGIN" IN TIMESTAMP,
  "END" IN TIMESTAMP,
  DELIVERED IN TIMESTAMP,
  CHANNEL_ID IN NVARCHAR2,
  LOCK_ID IN NVARCHAR2,
  REMOTE_ID IN NVARCHAR2,
  CONTENT_TYPE IN NVARCHAR2,
  PATTERN_ID IN NVARCHAR2,
  FOUND OUT INTEGER
)
AS 
  MSG_ID NVARCHAR2(32);
  EMAIL NVARCHAR2(100);
  EMAIL_PATTERN NVARCHAR2(100):='[a-zA-Z0-9._%-]+@[a-zA-Z0-9._%-]+\.[a-zA-Z]{2,4}';
  PHONE NVARCHAR2(100);
  PHONE_PATTERN NVARCHAR2(100):='[0-9]{1,11}';
  S_ID NVARCHAR2(32):=SENDER_ID;
  R_ID NVARCHAR2(32):=RECIPIENT_ID;
  FLAG BOOLEAN:=TRUE;
BEGIN
  MSG_ID:=GET_UNIQUE_ID();
  
  FOUND:=0;
  
  IF (REMOTE_ID IS NOT NULL) THEN
  
    FOR INC IN (SELECT MESSAGE_ID
                  FROM MESSAGES 
                 WHERE REMOTE_ID = INCOMING_MESSAGE.REMOTE_ID
                   AND CHANNEL_ID = INCOMING_MESSAGE.CHANNEL_ID
                   AND CREATED >= (CREATED - INTERVAL '1' DAY)) LOOP
      FLAG:=FALSE;
      FOUND:=1;
      MESSAGE_ID:=INC.MESSAGE_ID;
      EXIT;                    
    END LOOP;                   

  END IF;
  
  IF (FLAG) THEN
  
    IF ((S_ID IS NULL) AND (SENDER_CONTACT IS NOT NULL)) THEN
    
      EMAIL:=LOWER(REGEXP_SUBSTR(SENDER_CONTACT,EMAIL_PATTERN));
      PHONE:=UPPER(REGEXP_SUBSTR(SENDER_CONTACT,PHONE_PATTERN));
    
      FOR INC IN (SELECT ACCOUNT_ID
                     FROM ACCOUNTS 
                    WHERE LOCKED IS NULL
                      AND (REGEXP_SUBSTR(EMAIL,EMAIL_PATTERN) = INCOMING_MESSAGE.EMAIL OR
                           REGEXP_SUBSTR(PHONE,PHONE_PATTERN) = INCOMING_MESSAGE.PHONE)
                    ORDER BY CREATED) LOOP
        S_ID:=INC.ACCOUNT_ID;
        EXIT;                  
      END LOOP;                   
    
    END IF;
  
    IF ((R_ID IS NULL) AND (RECIPIENT_CONTACT IS NOT NULL)) THEN
    
      EMAIL:=LOWER(REGEXP_SUBSTR(RECIPIENT_CONTACT,EMAIL_PATTERN));
      PHONE:=UPPER(REGEXP_SUBSTR(RECIPIENT_CONTACT,PHONE_PATTERN));
    
      FOR INC IN (SELECT ACCOUNT_ID
                     FROM ACCOUNTS 
                    WHERE LOCKED IS NULL
                      AND (REGEXP_SUBSTR(EMAIL,EMAIL_PATTERN) = INCOMING_MESSAGE.EMAIL OR
                           REGEXP_SUBSTR(PHONE,PHONE_PATTERN) = INCOMING_MESSAGE.PHONE)
                    ORDER BY CREATED) LOOP
        R_ID:=INC.ACCOUNT_ID;
        EXIT;                  
      END LOOP;                   
    
    END IF;
  
    INSERT INTO MESSAGES (MESSAGE_ID, PARENT_ID, CREATED, CREATOR_ID, 
                           SENDER_ID, SENDER_NAME, SENDER_CONTACT,
                           RECIPIENT_ID, RECIPIENT_NAME, RECIPIENT_CONTACT, 
                           SUBJECT, BODY, 
                           SENT, ERROR, 
                           "BEGIN", "END", DELIVERED, 
                           CHANNEL_ID, LOCK_ID, REMOTE_ID, CONTENT_TYPE, 
                           PATTERN_ID)
                  VALUES (MSG_ID, INCOMING_MESSAGE.PARENT_ID, CURRENT_TIMESTAMP, INCOMING_MESSAGE.CREATOR_ID, 
                           S_ID, INCOMING_MESSAGE.SENDER_NAME, INCOMING_MESSAGE.SENDER_CONTACT,
                           R_ID, INCOMING_MESSAGE.RECIPIENT_NAME, INCOMING_MESSAGE.RECIPIENT_CONTACT,
                           INCOMING_MESSAGE.SUBJECT, INCOMING_MESSAGE.BODY, 
                           DECODE(INCOMING_MESSAGE.SENT,NULL,CURRENT_TIMESTAMP,INCOMING_MESSAGE.SENT), INCOMING_MESSAGE.ERROR,
                           INCOMING_MESSAGE."BEGIN", INCOMING_MESSAGE."END", INCOMING_MESSAGE.DELIVERED,
                           INCOMING_MESSAGE.CHANNEL_ID, INCOMING_MESSAGE.LOCK_ID, INCOMING_MESSAGE.REMOTE_ID, INCOMING_MESSAGE.CONTENT_TYPE,
                           INCOMING_MESSAGE.PATTERN_ID); 
    COMMIT;   
   
    IF (MSG_ID IS NOT NULL) THEN
      MESSAGE_ID:=MSG_ID;
    END IF;
    
  END IF;  
  
END;