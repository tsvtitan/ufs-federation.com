DROP VIEW V_DEVICE_PROMOTIONS;

CREATE OR REPLACE VIEW V_DEVICE_PROMOTIONS
AS
SELECT D.DEVICE_ID,
       P.PROMOTION_ID, 
       PP.PROMOTION_PRODUCT_ID, PP.PROMOTION_COMPANY_ID, PC.NAME AS COMPANY_NAME,
       PP.BEGIN, PP.END, PP.LOCKED, PP.TIMEOUT,
       PT.PROMOTION_TYPE_ID, PT.NAME, PT.DESCRIPTION, PT.AGREEMENT,
       DBMS_LOB.GETLENGTH(PT.IMAGE) AS IMAGE_SIZE, PT.IMAGE_EXTENSION,
       (CASE
          WHEN P1.STATUS IS NULL
            THEN CASE
                   WHEN PP.LOCKED IS NULL
                     THEN CASE
                            WHEN (PP.BEGIN IS NULL OR (PP.BEGIN IS NOT NULL AND PP.BEGIN<=CURRENT_TIMESTAMP)) AND
                                 (PP.END IS NULL OR (PP.END IS NOT NULL AND PP.END>=CURRENT_TIMESTAMP))
                              THEN 'started'
                            WHEN PP.BEGIN IS NOT NULL AND PP.BEGIN>=CURRENT_TIMESTAMP
                              THEN 'prepared'
                            WHEN PP.END IS NOT NULL AND PP.END<=CURRENT_TIMESTAMP
                              THEN 'finished'
                            ELSE 'finished' END    
                   ELSE 'disabled' END
          ELSE P1.STATUS END) AS STATUS,
       P1.CREATED, P1.EXPIRED, P1.ACCEPTED, P1.REJECTED,
       (CASE WHEN P1.CNT IS NULL THEN 0 ELSE P1.CNT END) AS PROMOTION_COUNT,
       PP.PRIORITY, CURRENT_TIMESTAMP AS STAMP
       
  FROM DEVICES D
  LEFT JOIN PROMOTIONS P ON P.DEVICE_ID=D.DEVICE_ID
  LEFT JOIN PROMOTION_PRODUCTS PP ON PP.PROMOTION_PRODUCT_ID=P.PROMOTION_PRODUCT_ID
  LEFT JOIN PROMOTION_TYPES PT ON PT.PROMOTION_TYPE_ID=PP.PROMOTION_TYPE_ID
  LEFT JOIN PROMOTION_COMPANIES PC ON PC.PROMOTION_COMPANY_ID=PP.PROMOTION_COMPANY_ID
  LEFT JOIN (SELECT T.DEVICE_ID, T.PROMOTION_PRODUCT_ID,
                    T.CREATED, T.EXPIRED, T.ACCEPTED, T.REJECTED, T.CNT,
                    (CASE
                       WHEN T.ACCEPTED IS NULL 
                         THEN CASE
                                WHEN T.REJECTED IS NULL
                                  THEN CASE
                                         WHEN T.EXPIRED IS NULL OR (T.EXPIRED IS NOT NULL AND T.EXPIRED>=CURRENT_TIMESTAMP)
                                           THEN NULL
                                         ELSE 'expired' END
                                ELSE 'rejected' END
                       ELSE 'accepted' END) AS STATUS
               FROM (SELECT P.DEVICE_ID, PP.PROMOTION_PRODUCT_ID, 
                            MAX(P.CREATED) AS CREATED, MAX(P.EXPIRED) AS EXPIRED,
                            MAX(P.ACCEPTED) AS ACCEPTED, MAX(P.REJECTED) AS REJECTED,
                            COUNT(*) AS CNT 
                       FROM PROMOTIONS P
                       JOIN PROMOTION_PRODUCTS PP ON PP.PROMOTION_PRODUCT_ID=P.PROMOTION_PRODUCT_ID
                      GROUP BY P.DEVICE_ID, PP.PROMOTION_PRODUCT_ID) T) P1 ON P1.PROMOTION_PRODUCT_ID=PP.PROMOTION_PRODUCT_ID AND P1.DEVICE_ID=P.DEVICE_ID
  
 WHERE D.LOCKED IS NULL 
   AND PC.LOCKED IS NULL
